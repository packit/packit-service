# Copyright Contributors to the Packit project.
# SPDX-License-Identifier: MIT

---
# This file is the entrypoint to deploy packit-service to an openshift cluster (e.g. in Zuul)
- name: Deploy dev version of packit-service into zuul.
  hosts: all
  vars:
    deployment_dir: "{{ ansible_user_dir }}/{{ zuul.projects['github.com/packit/deployment'].src_dir }}"
    as_root: true # needs to run as root in zuul
  tasks:
    - name: Install packages for deployment
      ansible.builtin.package:
        name:
          - git
          #           - ansible
          - python-openshift
          - python-pip
          - make
          - skopeo
      become: true

    # For "equalto" test in set-facts.yml we need Jinja2>=2.8.x, there's 2.7.2 in centos7
    # Needs to be installed before running the set-facts.yml playbook
    - name: Install Jinja-2.8.1
      ansible.builtin.pip:
        name: Jinja2==2.8.1
      become: true
      when: (ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == "7")

    - name: clone deployment repo when not running in zuul
      block:
        - ansible.builtin.set_fact: deployment_dir=/tmp/deployment
        - ansible.builtin.set_fact: as_root=false
        - name: clone deployment repository (templates are there)
          ansible.builtin.git:
            repo: "https://github.com/packit/deployment.git"
            dest: "{{ deployment_dir }}"
            clone: true
      when: zuul is not defined

    - name: Generate secrets
      ansible.builtin.command: make generate-local-secrets
      environment:
        DEPLOYMENT: dev
        ANSIBLE_STDOUT_CALLBACK: debug
      args:
        chdir: "{{ deployment_dir }}"
      become: "{{ as_root }}"
      when: path_to_secrets is not defined

    - name: symlink provided path_to_secrets/packit/dev to secrets/packit/dev/
      ansible.builtin.file:
        state: link
        src: "{{ path_to_secrets }}/packit/dev"
        dest: "{{ deployment_dir }}/secrets/packit/dev"
      when: path_to_secrets is defined

    - name: get token
      ansible.builtin.command: oc whoami -t
      register: kubeconfig_token
      become: "{{ as_root }}"

    - name: get minishift ip
      ansible.builtin.command: minishift ip
      register: minishift_ip
      ignore_errors: true

    - ansible.builtin.set_fact:
        cluster_ip: "{{ minishift_ip.stdout if not minishift_ip.failed else '127.0.0.1' }}"

    - name: Create packit/dev.yml
      ansible.builtin.copy:
        content: |
          # See https://github.com/packit/deployment/blob/main/vars/packit/dev_template.yml
          project: myproject
          host: https://{{ cluster_ip }}:8443
          api_key: {{ kubeconfig_token.stdout }}
          validate_certs: false
          # we don't need these services for testing p-s
          with_tokman: false
          with_beat: false
          with_fedmsg: false
          with_dashboard: false
          with_pushgateway: false
          push_dev_images: true
          # https://github.com/packit/deployment/pull/296
          check_up_to_date: false
          # we don't have tokman:dev
          image_tokman: quay.io/packit/tokman:stg
        dest: "{{ deployment_dir }}/vars/packit/dev.yml"

    - name: Actually deploy
      command: make deploy
      environment:
        DEPLOYMENT: dev
        ANSIBLE_STDOUT_CALLBACK: debug
      args:
        chdir: "{{ deployment_dir }}"
      become: "{{ as_root }}"
